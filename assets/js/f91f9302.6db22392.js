"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[7207],{6402:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>I,contentTitle:()=>E,default:()=>$,frontMatter:()=>S,metadata:()=>N,toc:()=>C});var n=s(1527),a=s(3883),i=s(959),r=s(5924),o=s(118),l=s(8903),h=s(5339),c=s(9316),d=s(6006),u=s(3623);function p(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function g(e){const{values:t,children:s}=e;return(0,i.useMemo)((()=>{const e=t??function(e){return p(e).map((e=>{let{props:{value:t,label:s,attributes:n,default:a}}=e;return{value:t,label:s,attributes:n,default:a}}))}(s);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,s])}function m(e){let{value:t,tabValues:s}=e;return s.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:s}=e;const n=(0,l.k6)(),a=function(e){let{queryString:t=!1,groupId:s}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:t,groupId:s});return[(0,c._X)(a),(0,i.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(n.location.search);t.set(a,e),n.replace({...n.location,search:t.toString()})}),[a,n])]}function x(e){const{defaultValue:t,queryString:s=!1,groupId:n}=e,a=g(e),[r,o]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=s.find((e=>e.default))??s[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:a}))),[l,c]=f({queryString:s,groupId:n}),[d,p]=function(e){let{groupId:t}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,a]=(0,u.Nk)(s);return[n,(0,i.useCallback)((e=>{s&&a.set(e)}),[s,a])]}({groupId:n}),x=(()=>{const e=l??d;return m({value:e,tabValues:a})?e:null})();(0,h.Z)((()=>{x&&o(x)}),[x]);return{selectedValue:r,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),p(e)}),[c,p,a]),tabValues:a}}var j=s(5089);const b={tabList:"tabList_jrYe",tabItem:"tabItem_OXj1"};function v(e){let{className:t,block:s,selectedValue:a,selectValue:i,tabValues:l}=e;const h=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const t=e.currentTarget,s=h.indexOf(t),n=l[s].value;n!==a&&(c(t),i(n))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=h.indexOf(e.currentTarget)+1;t=h[s]??h[0];break}case"ArrowLeft":{const s=h.indexOf(e.currentTarget)-1;t=h[s]??h[h.length-1];break}}t?.focus()};return(0,n.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":s},t),children:l.map((e=>{let{value:t,label:s,attributes:i}=e;return(0,n.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>h.push(e),onKeyDown:u,onClick:d,...i,className:(0,r.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":a===t}),children:s??t},t)}))})}function y(e){let{lazy:t,children:s,selectedValue:a}=e;const r=(Array.isArray(s)?s:[s]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,n.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function k(e){const t=x(e);return(0,n.jsxs)("div",{className:(0,r.Z)("tabs-container",b.tabList),children:[(0,n.jsx)(v,{...e,...t}),(0,n.jsx)(y,{...e,...t})]})}function w(e){const t=(0,j.Z)();return(0,n.jsx)(k,{...e,children:p(e.children)},String(t))}const z={tabItem:"tabItem_OqcZ"};function R(e){let{children:t,hidden:s,className:a}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,r.Z)(z.tabItem,a),hidden:s,children:t})}const S={sidebar_label:"Release Manager Guide"},E="Apache Release Manager Guide",N={id:"developer-guide/project/release-guide",title:"Apache Release Manager Guide",description:"This document describes the process to release Apache Ozone. The process is not yet scripted, and the documentation is a work in progress.",source:"@site/docs/08-developer-guide/04-project/03-release-guide.md",sourceDirName:"08-developer-guide/04-project",slug:"/developer-guide/project/release-guide",permalink:"/docs/developer-guide/project/release-guide",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/ozone-site/tree/HDDS-9225-website-v2/docs/08-developer-guide/04-project/03-release-guide.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Release Manager Guide"},sidebar:"tutorialSidebar",previous:{title:"Git Branches and Tags",permalink:"/docs/developer-guide/project/branches-and-tags"}},I={},C=[{value:"Pre-Requisite",id:"pre-requisite",level:2},{value:"Publish Your GPG Key",id:"publish-your-gpg-key",level:2},{value:"Pre-Vote",id:"pre-vote",level:2},{value:"Create a parent Jira for the release",id:"create-a-parent-jira-for-the-release",level:3},{value:"Bulk comment on Jiras targeting this release",id:"bulk-comment-on-jiras-targeting-this-release",level:3},{value:"Create a Release Branch",id:"create-a-release-branch",level:3},{value:"Set up local environment",id:"set-up-local-environment",level:3},{value:"Reset the git repository",id:"reset-the-git-repository",level:3},{value:"Update the versions",id:"update-the-versions",level:3},{value:"Build and commit the <code>proto.lock</code> change",id:"build-and-commit-the-protolock-change",level:3},{value:"Tag the commit for the release candidate",id:"tag-the-commit-for-the-release-candidate",level:3},{value:"Create the release artifacts",id:"create-the-release-artifacts",level:3},{value:"Calculate the checksum and sign the artifacts",id:"calculate-the-checksum-and-sign-the-artifacts",level:3},{value:"Check the artifacts",id:"check-the-artifacts",level:3},{value:"Upload the artifacts dev staging area",id:"upload-the-artifacts-dev-staging-area",level:3},{value:"Upload the Artifacts to Apache Nexus",id:"upload-the-artifacts-to-apache-nexus",level:3},{value:"Push the release candidate tag to github",id:"push-the-release-candidate-tag-to-github",level:3},{value:"Vote",id:"vote",level:2},{value:"After-Vote",id:"after-vote",level:2},{value:"Publish the artifacts",id:"publish-the-artifacts",level:3},{value:"Write a haiku",id:"write-a-haiku",level:3},{value:"Update the ozone website",id:"update-the-ozone-website",level:3},{value:"Add the final git tag and push it",id:"add-the-final-git-tag-and-push-it",level:3},{value:"Update the master branch",id:"update-the-master-branch",level:3},{value:"Update the Ozone Roadmap",id:"update-the-ozone-roadmap",level:3},{value:"Write an announcement mail to the Ozone mailing lists",id:"write-an-announcement-mail-to-the-ozone-mailing-lists",level:3},{value:"Publish a docker image for the release",id:"publish-a-docker-image-for-the-release",level:3},{value:"Patch Release",id:"patch-release",level:2},{value:"Update this document",id:"update-this-document",level:2}];function O(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"apache-release-manager-guide",children:"Apache Release Manager Guide"}),"\n",(0,n.jsxs)(t.p,{children:["This document describes the process to release Apache Ozone. The process is not yet scripted, and the documentation is ",(0,n.jsx)(t.strong,{children:"a work in progress"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"pre-requisite",children:"Pre-Requisite"}),"\n",(0,n.jsxs)(t.p,{children:["The release manager should have a GPG key set up to sign the artifacts. For help creating your key refer to the ",(0,n.jsx)(t.a,{href:"https://www.apache.org/dev/new-committers-guide.html#set-up-security-and-pgp-keys",children:"ASF new committer guide"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"publish-your-gpg-key",children:"Publish Your GPG Key"}),"\n",(0,n.jsxs)(t.p,{children:["The release manager's GPG key is supposed to be published together with the release. Please append it to the end of the ",(0,n.jsx)(t.a,{href:"https://dist.apache.org/repos/dist/release/ozone/KEYS",children:"KEYS file"})," if it is not already present by using SVN."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Publish key (committer)"',children:'svn co https://dist.apache.org/repos/dist/release/ozone\ncd ozone\nexport CODESIGNINGKEY=<your_gpg_key_id>\ngpg --list-sigs $CODESIGNINGKEY >> KEYS\ngpg --armor --export $CODESIGNINGKEY >> KEYS\nsvn commit -m "ozone: adding key of <your_name> to the KEYS"\n'})}),"\n",(0,n.jsx)(t.p,{children:"In case you are only a committer and not a PMC member, you can add your key to the dev KEYS file and a PMC can move it to the final destination"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Move key (PMC)"',children:'#use latest KEYS as the base\nsvn rm https://dist.apache.org/repos/dist/dev/ozone/KEYS\nsvn cp https://dist.apache.org/repos/dist/release/ozone/KEYS  https://dist.apache.org/repos/dist/dev/ozone/KEYS\n\nsvn co https://dist.apache.org/repos/dist/dev/ozone\ncd ozone\nexport CODESIGNINGKEY=your_gpg_key_id\ngpg --list-sigs $CODESIGNINGKEY >> KEYS\ngpg --armor --export $CODESIGNINGKEY >> KEYS\nsvn commit -m "ozone: adding key of XXXX to the KEYS"\n'})}),"\n",(0,n.jsx)(t.h2,{id:"pre-vote",children:"Pre-Vote"}),"\n",(0,n.jsx)(t.h3,{id:"create-a-parent-jira-for-the-release",children:"Create a parent Jira for the release"}),"\n",(0,n.jsx)(t.p,{children:"This provides visibility into the progress of the release for the community. Tasks mentioned in this guide like cherry-picking fixes on to the release branch, updating the ozone website, publishing the docker image, etc can be added as subtasks."}),"\n",(0,n.jsx)(t.h3,{id:"bulk-comment-on-jiras-targeting-this-release",children:"Bulk comment on Jiras targeting this release"}),"\n",(0,n.jsxs)(t.p,{children:["Issue a Jira query like ",(0,n.jsx)(t.a,{href:"https://issues.apache.org/jira/browse/HDDS-4183?jql=project%20%3D%20HDDS%20AND%20resolution%20%3D%20Unresolved%20AND%20(cf%5B12310320%5D%20%3D%201.3.0%20OR%20fixVersion%20%3D%201.3.0)%20ORDER%20BY%20priority%20DESC%2C%20updated%20DESC",children:"this"}),", modified for the release number you are working with, to find all unresolved Jiras that have the target version field set to this release. Note that some people incorrectly use Fix Version as the Target Version, so Fix Version is included in this search. Use the following steps to issue a bulk update to these Jiras:"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["In the top right corner, click ",(0,n.jsx)(t.code,{children:"Tools"})," and under ",(0,n.jsx)(t.code,{children:"Bulk Change"})," , select ",(0,n.jsx)(t.code,{children:"all ... issues"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["Click the top check box to select all the issues. Click ",(0,n.jsx)(t.code,{children:"Next"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["Select ",(0,n.jsx)(t.code,{children:"Edit Issues"})," , then click ",(0,n.jsx)(t.code,{children:"Next"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["Select ",(0,n.jsx)(t.code,{children:"Change Fix Version/s"})," , and in the drop down select ",(0,n.jsx)(t.code,{children:"Clear field"}),".","\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsx)(t.p,{children:"This corrects unresolved issues which incorrectly set a fix version for this release."})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Select ",(0,n.jsx)(t.code,{children:"Change Target Version/s"}),", and enter the version of the release after the one you are managing."]}),"\n",(0,n.jsxs)(t.li,{children:["Select ",(0,n.jsx)(t.code,{children:"Change Comment"}),", and add a comment saying that you have moved the release field out, but if the issue is being actively worked on, is close to completion, and would like to be included in this release, to contact you by a given date, probably a week in the future.","\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["Even though the action is called ",(0,n.jsx)(t.code,{children:"Change Comment"}),", it actually adds a comment to the Jira and does not affect existing comments."]})}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Keep clicking through until the operation is started. It may take a while for Jira to finish the bulk update once it is started."}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"create-a-release-branch",children:"Create a Release Branch"}),"\n",(0,n.jsxs)(t.p,{children:["After the date specified in the Jira comments has passed and blocking issues have been resolved, you can create a release branch in the ",(0,n.jsx)(t.a,{href:"https://github.com/apache/ozone",children:"apache/ozone"})," Github repo. Name the branch after the major and minor version of the release, so patch releases can also be done off this branch. For example, If releasing 1.2.0, create a branch called ",(0,n.jsx)(t.code,{children:"ozone-1.2"})," . All release related changes will go to this branch until the release is complete, after which some changes mentioned below will be cherry picked to ",(0,n.jsx)(t.code,{children:"master"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"set-up-local-environment",children:"Set up local environment"}),"\n",(0,n.jsx)(t.p,{children:"The following variables will be referenced in commands."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Export Vars"',children:"export VERSION=1.1.0 # Set to the version of ozone being released.\nexport RELEASE_DIR=~/ozone-release/ # ozone-release needs to be created\nexport CODESIGNINGKEY=<your_gpg_key_id>\nexport RC=0 # Set to the number of the current release candidate, starting at 0.\n"})}),"\n",(0,n.jsxs)(t.p,{children:["It is probably best to clone a fresh ozone repository locally to work on the release, and leave your existing repository intact for dev tasks you may be working on simultaneously. After cloning, make sure the git remote for the apache/ozone upstream repo is named ",(0,n.jsx)(t.code,{children:"origin"}),". This is required for release build metadata to be correctly populated. Assume all following commands are executed from within this repo with your release branch checked out."]}),"\n",(0,n.jsx)(t.h3,{id:"reset-the-git-repository",children:"Reset the git repository"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Reset the Git Repo"',children:"git reset --hard\ngit clean -dfx\n"})}),"\n",(0,n.jsx)(t.h3,{id:"update-the-versions",children:"Update the versions"}),"\n",(0,n.jsxs)(t.p,{children:["Use the commands below or your IDE to replace ",(0,n.jsx)(t.code,{children:"$VERSION-SNAPSHOT"})," with ",(0,n.jsx)(t.code,{children:"$VERSION"}),"."]}),"\n","\n","\n",(0,n.jsxs)(w,{children:[(0,n.jsx)(R,{value:"linux",label:"Linux",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Update the Versions"',children:'find . -name pom.xml -type f | xargs sed -i "s/$VERSION-SNAPSHOT/$VERSION/g"\n'})})}),(0,n.jsx)(R,{value:"mac",label:"Mac",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Update the Versions (Mac)"',children:"find . -name pom.xml -type f -print0 | xargs -0 sed -i '' \"s/$VERSION-SNAPSHOT/$VERSION/g\"\n"})})})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Commit the version changes "',children:'git commit -am "Update Ozone version to $VERSION"\n'})}),"\n",(0,n.jsxs)(t.h3,{id:"build-and-commit-the-protolock-change",children:["Build and commit the ",(0,n.jsx)(t.code,{children:"proto.lock"})," change"]}),"\n",(0,n.jsxs)(t.p,{children:["Protolock files are used to check backwards compatibility of protocol buffers between releases. The ozone build checks protocol buffers against these lock files and fails if an incompatibility is detected. They should be updated for each release, and require ",(0,n.jsx)(t.a,{href:"https://github.com/nilslice/protolock",children:"protolock"})," to be installed. Save and run the following script from your ozone repo root, and then commit the changed files to git. Double check that only files called ",(0,n.jsx)(t.code,{children:"proto.lock"})," are being committed, and that the changes to the files makes sense based on new features added in this release."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="update_protolocks.sh"',children:'#!/usr/bin/env sh\n\nfor lock in $(find . -name proto.lock); do\n    lockdir="$(dirname "$lock")"\n    protoroot="$lockdir"/../proto\n    if protolock status --lockdir="$lockdir" --protoroot="$protoroot"; then\n        protolock commit --lockdir="$lockdir" --protoroot="$protoroot"\n    else\n        echo "protolock update failed for $protoroot"\n    fi\ndone\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Build and commit the proto.lock change"',children:'git commit -m "update proto.lock for Ozone $VERSION"\n'})}),"\n",(0,n.jsx)(t.h3,{id:"tag-the-commit-for-the-release-candidate",children:"Tag the commit for the release candidate"}),"\n",(0,n.jsxs)(t.p,{children:["This will sign the tag with the gpg key matching the git mailing address. Make sure that the email given by ",(0,n.jsx)(t.code,{children:"git config user.email"})," matches the email for the key you want to use shown by ",(0,n.jsx)(t.code,{children:"gpg --list-secret-keys"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Tag the Release"',children:'git tag -s "ozone-$VERSION-RC$RC"\n'})}),"\n",(0,n.jsx)(t.p,{children:"If the command fails on MacOS, you may need to do the following additional steps:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Install a program to prompt you for your gpg key passphrase (example using homebrew): ",(0,n.jsx)(t.code,{children:"brew install pinentry-mac"})]}),"\n",(0,n.jsxs)(t.li,{children:["Tell git to use this program for signing:",(0,n.jsx)(t.code,{children:'git config --global gpg.program "$(which gpg)"'})]}),"\n",(0,n.jsxs)(t.li,{children:["Tell git which key to sign with: ",(0,n.jsx)(t.code,{children:"git config --global user.signingKey <gpg_key_id>"})]}),"\n",(0,n.jsxs)(t.li,{children:["Tell gpg to use this program to prompt for passphrase: ",(0,n.jsx)(t.code,{children:'echo "pinentry-program $(which pinentry-mac)" > ~/.gnupg/gpg-agent.conf'})]}),"\n",(0,n.jsxs)(t.li,{children:["Reload gpg-agent: ",(0,n.jsx)(t.code,{children:"gpgconf --kill gpg-agent"})]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"create-the-release-artifacts",children:"Create the release artifacts"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Run rat check and ensure there are no failures.","\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Run RAT Check"',children:"./hadoop-ozone/dev-support/checks/rat.sh\n"})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Clean the Repo of all Rat output","\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Reset the Git Repo"',children:"git reset --hard\ngit clean -dfx\n"})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Build the Release Tarballs. Make sure that ",(0,n.jsx)(t.a,{href:"https://gohugo.io/",children:"Hugo"})," is installed so that this step will also build the documentation. Also make sure you are using GNU-tar instead of BSD-tar.","\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Build Ozone"',children:'mvn clean install -Dmaven.javadoc.skip=true -DskipTests -Psign,dist,src -Dtar -Dgpg.keyname="$CODESIGNINGKEY"\n'})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Now that we have built the release artifacts, we will copy them to the release directory.","\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Copy to Release Directory"',children:'cp hadoop-ozone/dist/target/ozone-*.tar.gz "$RELEASE_DIR"/\n'})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"calculate-the-checksum-and-sign-the-artifacts",children:"Calculate the checksum and sign the artifacts"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'cd "$RELEASE_DIR"\nfor i in $(ls -1 *.tar.gz); do gpg  -u "$CODESIGNINGKEY" --armor --output "$i.asc" --detach-sig "$i"; done\n\nfor i in $(ls -1 *.tar.gz); do sha512sum "$i" > "$i.sha512"; done\n\nfor i in $(ls -1 *.tar.gz); do gpg --print-mds "$i" > "$i.mds"; done\n'})}),"\n",(0,n.jsx)(t.p,{children:"Now each .tar.gz file should have an associated .mds file, .asc file, and .sha512 file"}),"\n",(0,n.jsx)(t.h3,{id:"check-the-artifacts",children:"Check the artifacts"}),"\n",(0,n.jsx)(t.p,{children:"Before uploading the artifacts, run some basic tests on them, similar to what other devs will run before voting in favor of the release."}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Extract the contents of the source tarball and build it with an empty maven cache by renaming your ",(0,n.jsx)(t.code,{children:"~/.m2"})," directory before doing the build."]}),"\n",(0,n.jsxs)(t.li,{children:["Check the size of the output binary tarball for significant size increase from the last release.","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"A significant increase in size could indicate a dependency issue that needs to be fixed."}),"\n",(0,n.jsxs)(t.li,{children:["The Apache svn repo has a size limit for release artifacts. If uploading svn fails because the tarball is too big, we need to contact INFRA to increase our repo size. ",(0,n.jsx)(t.a,{href:"https://issues.apache.org/jira/browse/INFRA-23892",children:"See here for details."})]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Verify signatures","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Download the KEYS file from ",(0,n.jsx)(t.a,{href:"https://dist.apache.org/repos/dist/release/ozone/KEYS",children:"https://dist.apache.org/repos/dist/release/ozone/KEYS"})]}),"\n",(0,n.jsxs)(t.li,{children:["Import its contents (which should include your public gpg key): ",(0,n.jsx)(t.code,{children:"gpg --import KEYS"})]}),"\n",(0,n.jsxs)(t.li,{children:["Verify each .tar.gz artifact: ",(0,n.jsx)(t.code,{children:"gpg --verify <artifact>.tar.gz.asc <artifact>.tar.gz"})]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Verify checksums","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Run ",(0,n.jsx)(t.code,{children:"shasum -a 512 *.tar.gz"})]}),"\n",(0,n.jsx)(t.li,{children:"Verify that the output checksums for each artifact match the contents of its .sha512 file and the SHA512 line in its .mds file."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Make sure docs are present in the release tarball","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["There should be a directory called docs in the top level. If there is not, then ",(0,n.jsx)(t.code,{children:"hugo"})," was not installed during the build and it must be re-done."]}),"\n",(0,n.jsx)(t.li,{children:"Extract the release and open docs/index.html in your web browser, and check that the documentation website looks ok."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Check the output of running ",(0,n.jsx)(t.code,{children:"bin/ozone version"})," from the extracted release tarball","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["After extracting the release, the output of this command should contain:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"The correct release"}),"\n",(0,n.jsx)(t.li,{children:"The correct national park tag"}),"\n",(0,n.jsx)(t.li,{children:"A non-snapshot version of Ratis."}),"\n",(0,n.jsx)(t.li,{children:"A link to the apache/ozone GitHub repository (not your fork)."}),"\n",(0,n.jsx)(t.li,{children:"The git hash of the last commit the release was built on."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Run the Ozone upgrade acceptance tests by running ",(0,n.jsx)(t.code,{children:"test.sh"})," from the compose/upgrade directory in the extracted release tarball.","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"This check is also run by the GitHub actions CI for each commit, so it should pass with no surprises."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"upload-the-artifacts-dev-staging-area",children:"Upload the artifacts dev staging area"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Upload everything from the ",(0,n.jsx)(t.code,{children:"$RELEASE_DIR"})," to the dev staging area."]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Upload artifacts to staging"',children:'svn mkdir https://dist.apache.org/repos/dist/dev/ozone/"$VERSION-rc$RC"\nsvn co https://dist.apache.org/repos/dist/dev/ozone/"$VERSION-rc$RC"\ncp "$RELEASE_DIR"/* "$VERSION-rc$RC"\ncd "$VERSION-rc$RC"\nsvn add *\nsvn commit -m "Ozone $VERSION RC$RC"\n'})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Check the results using your browser by connecting to ",(0,n.jsx)(t.a,{href:"https://dist.apache.org/repos/dist/dev/ozone/",children:"https://dist.apache.org/repos/dist/dev/ozone/"})]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"upload-the-artifacts-to-apache-nexus",children:"Upload the Artifacts to Apache Nexus"}),"\n",(0,n.jsxs)(t.p,{children:["Double check that your apache credentials are added to your local ",(0,n.jsx)(t.code,{children:"~/.m2/settings.xml"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-xml",children:"<settings>\n  <servers>\n\t<server>\n      <id>apache.snapshots.https</id>\n      <username>your_apache_id</username>\n      <password>your_apache_password</password>\n    </server>\n    \x3c!-- To stage a release of some part of Maven --\x3e\n    <server>\n      <id>apache.staging.https</id>\n      <username>your_apache_id</username>\n      <password>your_apache_password</password>\n\t</server>\n  </servers>\n</settings>\n"})}),"\n",(0,n.jsx)(t.p,{children:"Return to your Ozone repository being used for the release, and run the following command:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Upload Release Artifacts"',children:"mvn deploy -Psign -pl '!:ozone-dist' -DskipTests -Dbuildhelper.skipAttach\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Go to ",(0,n.jsx)(t.a,{href:"https://repository.apache.org/#stagingRepositories",children:"https://repository.apache.org/#stagingRepositories"})," and ",(0,n.jsx)(t.strong,{children:"close"})," the newly created ",(0,n.jsx)(t.code,{children:"orgapacheozone"})," repository."]}),"\n",(0,n.jsx)(t.h3,{id:"push-the-release-candidate-tag-to-github",children:"Push the release candidate tag to github"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Push the tag"',children:'git push origin "ozone-$VERSION-RC$RC"\n'})}),"\n",(0,n.jsx)(t.h2,{id:"vote",children:"Vote"}),"\n",(0,n.jsxs)(t.p,{children:["Send a vote email to the ",(0,n.jsx)(t.a,{href:"mailto:dev@ozone.apache.org",children:"dev@ozone.apache.org"})," mailing list.  Include the following items in the email:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Link to the release candidate tag on Github"}),"\n",(0,n.jsxs)(t.li,{children:["Link to a Jira query showing all resolved issues for this release. Something like ",(0,n.jsx)(t.a,{href:"https://issues.apache.org/jira/issues/?jql=project%20%3D%20HDDS%20AND%20status%20in%20(Resolved%2C%20Closed)%20AND%20fixVersion%20%3D%201.4.0",children:"this"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["Location of the source and binary tarballs. This link will look something like ",(0,n.jsx)(t.a,{href:"https://dist.apache.org/repos/dist/dev/ozone/1.2.0-rc0",children:"https://dist.apache.org/repos/dist/dev/ozone/1.2.0-rc0"})]}),"\n",(0,n.jsxs)(t.li,{children:["Location where the maven artifacts are staged. This link will look something like ",(0,n.jsx)(t.a,{href:"https://repository.apache.org/content/repositories/orgapacheozone-1001/",children:"https://repository.apache.org/content/repositories/orgapacheozone-1001/"})]}),"\n",(0,n.jsxs)(t.li,{children:["Link to the public key used to sign the artifacts. This should always be in the KEYS file and you can just link to that: ",(0,n.jsx)(t.a,{href:"https://dist.apache.org/repos/dist/dev/ozone/KEYS",children:"https://dist.apache.org/repos/dist/dev/ozone/KEYS"})]}),"\n",(0,n.jsx)(t.li,{children:"Fingerprint of the key used to sign the artifacts."}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["If no issues are found with the artifacts, let the vote run for 7 days. Review the ",(0,n.jsx)(t.a,{href:"https://www.apache.org/legal/release-policy.html#release-approval",children:"ASF wide release voting policy"}),", and note the requirements for binding votes which can only come from PMC members. Sometimes responders will not specify whether or not their vote is binding. If in doubt check ",(0,n.jsx)(t.a,{href:"https://people.apache.org/committer-index.html",children:"The ASF committer index"}),". Users whose group membership includes ",(0,n.jsx)(t.code,{children:"ozone-pmc"})," can cast binding votes."]}),"\n",(0,n.jsxs)(t.p,{children:["Once voting is finished, send an email summarizing the results (binding +1s, non-binding +1s, -1s, 0s) and, if the vote passed, indicate that the release artifacts will be published. If an issue is found with the artifacts, apply fixes to the release branch and repeat the steps starting from ",(0,n.jsx)(t.a,{href:"#tag-the-commit-for-the-release-candidate",children:"Tag the Commit for the Release Candidate"})," with the ",(0,n.jsx)(t.code,{children:"$RC"})," variable incremented by 1 for all steps."]}),"\n",(0,n.jsx)(t.h2,{id:"after-vote",children:"After-Vote"}),"\n",(0,n.jsx)(t.h3,{id:"publish-the-artifacts",children:"Publish the artifacts"}),"\n",(0,n.jsx)(t.p,{children:"You should commit the artifacts to the SVN repository. If you are not a PMC member you can commit it to the dev zone first and ask a PMC for the final move."}),"\n",(0,n.jsx)(t.p,{children:"Checkout the svn folder and commit the artifacts to a new directory."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'svn checkout https://dist.apache.org/repos/dist/dev/ozone\ncd ozone\nsvn mkdir "$VERSION"\ncp "$RELEASE_DIR"/* "$VERSION"/\nsvn add "$VERSION"/*\nsvn commit -m "Added ozone-$VERSION directory"\n'})}),"\n",(0,n.jsx)(t.p,{children:"PMC members can move it to the final location:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'svn mv -m "Move ozone-$VERSION to release" https://dist.apache.org/repos/dist/dev/ozone/"$VERSION" https://dist.apache.org/repos/dist/release/ozone/"$VERSION"\n'})}),"\n",(0,n.jsxs)(t.p,{children:["To publish the artifacts to ",(0,n.jsx)(t.a,{href:"https://central.sonatype.com",children:"Maven Central"}),", login to ",(0,n.jsx)(t.a,{href:"https://repository.apache.org/#stagingRepositories",children:"https://repository.apache.org/#stagingRepositories"}),", select your ",(0,n.jsx)(t.strong,{children:"staging"})," repository and ",(0,n.jsx)(t.strong,{children:"release"})," it."]}),"\n",(0,n.jsx)(t.h3,{id:"write-a-haiku",children:"Write a haiku"}),"\n",(0,n.jsxs)(t.p,{children:["Check the tag from the ",(0,n.jsx)(t.a,{href:"https://cwiki.apache.org/confluence/display/OZONE/Ozone+Roadmap",children:"Ozone Roadmap"})," page (it's a national park).\nFind a photo which is under the CC license.\nWrite a haiku to the photo with Future font."]}),"\n",(0,n.jsx)(t.h3,{id:"update-the-ozone-website",children:"Update the ozone website"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Create release notes and add them to the Ozone website with your haiku image. An example pull request showing how to do this is ",(0,n.jsx)(t.a,{href:"https://github.com/apache/ozone-site/pull/17",children:"here"}),". Note that the target branch is ",(0,n.jsx)(t.code,{children:"master"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["Extract the docs folder from the release tarball, and add its contents to the website. An example pull request for this is ",(0,n.jsx)(t.a,{href:"https://github.com/apache/ozone-site/pull/18",children:"here"}),". Note that the target branch is ",(0,n.jsx)(t.code,{children:"asf-site"})," , and that the docs/current symlink has been updated to point to the latest release's directory."]}),"\n",(0,n.jsxs)(t.li,{children:["Test the website locally by running ",(0,n.jsx)(t.code,{children:"hugo serve"})," from the repository root with the master branch checked out. Check that links for the new release are working. Links to the documentation will not work until the PR to the ",(0,n.jsx)(t.code,{children:"asf-site"})," branch is merged."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"add-the-final-git-tag-and-push-it",children:"Add the final git tag and push it"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",metastring:'title="Add final release tag"',children:'git checkout "ozone-$VERSION-RC$RC"\ngit tag -s "ozone-$VERSION" -m "Ozone $VERSION release"\ngit push origin "ozone-$VERSION"\n'})}),"\n",(0,n.jsx)(t.h3,{id:"update-the-master-branch",children:"Update the master branch"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Cherry pick your commit updating the protolock files to a branch on your fork, and merge it to master with a pull request."}),"\n",(0,n.jsxs)(t.li,{children:["Update the Ozone SNAPSHOT version and national park tag on master with a pull request. Here you will pick the ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/List_of_national_parks_of_the_United_States",children:"national park"})," to use for the next release of Ozone and set it in the project's top level pom at ",(0,n.jsx)(t.code,{children:"<ozone.release>"}),". See ",(0,n.jsx)(t.a,{href:"https://github.com/apache/ozone/pull/2863",children:"this pull request"})," for an example."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"update-the-ozone-roadmap",children:"Update the Ozone Roadmap"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Update the ",(0,n.jsx)(t.a,{href:"https://cwiki.apache.org/confluence/display/OZONE/Ozone+Roadmap",children:"Ozone Roadmap"})," so that the release notes for the just completed release are correct."]}),"\n",(0,n.jsxs)(t.li,{children:["Move its row to the ",(0,n.jsx)(t.code,{children:"Past Releases"})," section."]}),"\n",(0,n.jsxs)(t.li,{children:["Create a row for the next release in the ",(0,n.jsx)(t.code,{children:"Upcoming Releases"})," section, and add planned features that you are aware of."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"write-an-announcement-mail-to-the-ozone-mailing-lists",children:"Write an announcement mail to the Ozone mailing lists"}),"\n",(0,n.jsx)(t.p,{children:"Include the following links:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Release notes: ",(0,n.jsx)(t.a,{href:"https://ozone.apache.org/release/1.2.0/",children:"https://ozone.apache.org/release/1.2.0/"}),". Replace the version in the URL with the version being released."]}),"\n",(0,n.jsxs)(t.li,{children:["Download link: ",(0,n.jsx)(t.a,{href:"https://ozone.apache.org/downloads/",children:"https://ozone.apache.org/downloads/"})]}),"\n",(0,n.jsxs)(t.li,{children:["Link to versioned documentation: ",(0,n.jsx)(t.a,{href:"https://ozone.apache.org/docs/",children:"https://ozone.apache.org/docs/"})]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"publish-a-docker-image-for-the-release",children:"Publish a docker image for the release"}),"\n",(0,n.jsxs)(t.p,{children:["The Ozone docker image is intended for testing purposes only, not production use. Therefore, it is ok to update this after announcing the release. An example pull request to update the docker image is ",(0,n.jsx)(t.a,{href:"https://github.com/apache/ozone-docker/pull/22/files",children:"here"}),". The target branch for your pull request should be ",(0,n.jsx)(t.code,{children:"latest"}),". After the pull request is merged, it can be published to ",(0,n.jsx)(t.a,{href:"https://hub.docker.com/r/apache/ozone",children:"Docker Hub"})," by updating the branches that correspond to ",(0,n.jsx)(t.a,{href:"https://hub.docker.com/r/apache/ozone/tags",children:"docker image tags"}),"."]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Publish the image with the ",(0,n.jsx)(t.code,{children:"latest"})," tag by fast-forwarding the ",(0,n.jsx)(t.code,{children:"ozone-latest"})," branch to match the ",(0,n.jsx)(t.code,{children:"latest"})," branch."]}),"\n",(0,n.jsxs)(t.li,{children:["Publish the image with a version specific tag by creating a new branch with a name like ",(0,n.jsx)(t.code,{children:"ozone-1.5.0"})," (replace this with the current version) from the ",(0,n.jsx)(t.code,{children:"latest"})," branch and push it to ",(0,n.jsx)(t.a,{href:"https://github.com/apache/ozone-docker",children:"GitHub"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'git checkout ozone-latest\ngit pull\ngit merge --ff-only origin/latest\ngit checkout -b "ozone-$VERSION"\ngit push origin ozone-latest "ozone-$VERSION"\n'})}),"\n",(0,n.jsx)(t.h2,{id:"patch-release",children:"Patch Release"}),"\n",(0,n.jsx)(t.p,{children:"If there is a security vulnerability or critical bug uncovered in a major or minor Ozone release, a patch release may be necessary to fix this. The process is a bit simpler than a major or minor release, since there is already a solid foundation on the release's maintenance branch."}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Cherry pick the fix(es) on to the maintenance branch. For example, for Ozone's 1.2.0 release, this is the branch called ",(0,n.jsx)(t.code,{children:"ozone-1.2"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["Run all steps from the sections ",(0,n.jsx)(t.a,{href:"#update-the-versions",children:"Update the Versions"})," through ",(0,n.jsx)(t.a,{href:"#publish-a-docker-image-for-the-release",children:"Publish a Docker Image for the Release"}),", with the following modifications:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Do not update the protolock files unless protocol buffers were changed as part of the fix."}),"\n",(0,n.jsxs)(t.li,{children:["When updating the website, all instances of the original major/minor release should be replaced with this patch version, since we do not want users downloading the original release anymore.","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"For example, any website text referring to 1.2.0 should be changed to refer to 1.2.1."}),"\n",(0,n.jsx)(t.li,{children:"Continuing the 1.2.0 to 1.2.1 example, the release/1.2.0 page should redirect to release/1.2.1."}),"\n",(0,n.jsxs)(t.li,{children:["An example pull request to do this is ",(0,n.jsx)(t.a,{href:"https://github.com/apache/ozone-site/pull/23",children:"here"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["The docs can be added to the website normally as described above in ",(0,n.jsx)(t.a,{href:"#update-the-ozone-website",children:"Update the Ozone Website"}),". The docs link for the original major/minor release can remain alongside the docs link for the patch release."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"In the event of a critical security vulnerability or seriously harmful bug with a small set of changes in the patch, PMC members may vote to forgo the usual 72 hour minimum time for a release vote and publish once there are enough binding +1s."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Remove the previous patch release from Apache distribution site:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"svn rm -m 'Ozone: delete old version 1.2.0' https://dist.apache.org/repos/dist/release/ozone/1.2.0\n"})}),"\n",(0,n.jsx)(t.h2,{id:"update-this-document",children:"Update this document"}),"\n",(0,n.jsx)(t.p,{children:"After finishing the release process, update this page to fix any mistakes, unclear steps, or outdated information."})]})}function $(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(O,{...e})}):O(e)}},3883:(e,t,s)=>{s.d(t,{Z:()=>o,a:()=>r});var n=s(959);const a={},i=n.createContext(a);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);